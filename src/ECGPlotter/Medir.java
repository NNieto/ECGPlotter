/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ECGPlotter;

import com.panamahitek.PanamaHitek_Arduino;
import gnu.io.SerialPortEvent;
import gnu.io.SerialPortEventListener;
import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Alejandro
 */
public class Medir extends java.awt.Dialog {

    /**
     * Creates new form Medir
     * @param parent
     * @param modal
     */
    public Medir(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
       // this.Hilo = new Thread((Runnable) this);
        initComponents();
        serie1.add(0,0);
        collection.addSeries(serie1);
        chart = new ChartPanel(ECGChart);
        ContenedorOsciloscopio.setLayout(new BorderLayout());
        ContenedorOsciloscopio.add(chart, BorderLayout.CENTER);
        for(int i = 0; i<200; i++){
            serie1.add(i, 0);
        }
        try {
            arduino.ArduinoRX("COM3",2000, 9600, evento);
        } catch (Exception ex) {
            Logger.getLogger(Medir.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        ContenedorOsciloscopio = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ObservacionesArea = new javax.swing.JTextArea();
        Jlabel11111111 = new javax.swing.JLabel();
        Grabar = new javax.swing.JButton();
        GuardarImagenBoton = new javax.swing.JButton();
        javax.swing.JButton GuardarECG = new javax.swing.JButton();
        ObservacionesLabel1 = new javax.swing.JLabel();
        FrecuenciaLabel = new javax.swing.JLabel();

        setTitle("Medici√≥n");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        ContenedorOsciloscopio.setBackground(new java.awt.Color(102, 102, 102));

        ObservacionesArea.setColumns(20);
        ObservacionesArea.setRows(5);
        jScrollPane1.setViewportView(ObservacionesArea);

        Jlabel11111111.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Jlabel11111111.setForeground(new java.awt.Color(0, 102, 255));
        Jlabel11111111.setText("Frecuencia (Hz):");
        Jlabel11111111.setToolTipText("");

        Grabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Grabar.setText("Grabar");
        Grabar.setToolTipText("");
        Grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrabarActionPerformed(evt);
            }
        });

        GuardarImagenBoton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GuardarImagenBoton.setText("Guardar Imagen");
        GuardarImagenBoton.setToolTipText("");
        GuardarImagenBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarImagenBotonActionPerformed(evt);
            }
        });

        GuardarECG.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GuardarECG.setText("Guardar Registro ECG");
        GuardarECG.setToolTipText("");
        GuardarECG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarECGActionPerformed(evt);
            }
        });

        ObservacionesLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ObservacionesLabel1.setForeground(new java.awt.Color(0, 102, 255));
        ObservacionesLabel1.setText("Observaciones");
        ObservacionesLabel1.setToolTipText("");

        FrecuenciaLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        FrecuenciaLabel.setForeground(new java.awt.Color(0, 102, 255));
        FrecuenciaLabel.setText("Frecuencia");
        FrecuenciaLabel.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContenedorOsciloscopio, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(ObservacionesLabel1)
                .addGap(126, 126, 126)
                .addComponent(Jlabel11111111)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FrecuenciaLabel))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(Grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(GuardarImagenBoton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(GuardarECG, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ContenedorOsciloscopio, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ObservacionesLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jlabel11111111)
                            .addComponent(FrecuenciaLabel))))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Grabar)
                    .addComponent(GuardarImagenBoton)
                    .addComponent(GuardarECG)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        try {
            arduino.killArduinoConnection();
        } catch (Exception ex) {
            Logger.getLogger(Medir.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_closeDialog

    private void GrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrabarActionPerformed
        // TODO add your handling code here:
        index++;
                //System.out.println(Integer.parseInt(arduino.printMessage())*5/1024);
                serie1.add(index, 333);
    }//GEN-LAST:event_GrabarActionPerformed

    private void GuardarImagenBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarImagenBotonActionPerformed
        try {
            // TODO add your handling code here:
            ChartUtilities.saveChartAsPNG(new File("soft3d.png"), ECGChart, 400, 300);
        } catch (IOException ex) {
            Logger.getLogger(Medir.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarImagenBotonActionPerformed

    private void GuardarECGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarECGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GuardarECGActionPerformed

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ContenedorOsciloscopio;
    private javax.swing.JLabel FrecuenciaLabel;
    private javax.swing.JButton Grabar;
    private javax.swing.JButton GuardarImagenBoton;
    private javax.swing.JLabel Jlabel11111111;
    private javax.swing.JTextArea ObservacionesArea;
    private javax.swing.JLabel ObservacionesLabel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private ChartPanel chart;
    Osciloscopio osc = new Osciloscopio();
    final XYSeries serie1 = new XYSeries("ECG");
    final XYSeriesCollection collection = new XYSeriesCollection();
    PanamaHitek_Arduino arduino = new PanamaHitek_Arduino();
    int index = 0;
    double num = 0;
    JFreeChart ECGChart = osc.crearGrafica(collection);
    Thread Hilo;
    SerialPortEventListener evento = new SerialPortEventListener() {

        @Override
        public void serialEvent(SerialPortEvent spe) {
           // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            if(arduino.isMessageAvailable() == true){
                index++;
                num = Double.parseDouble(arduino.printMessage())*5/1024;
                serie1.updateByIndex(index, num);
                if(index == 200){
                    index = 0;
                }
                FrecuenciaLabel.setText("" + num);
            } else {
            }
        }
    };
}
